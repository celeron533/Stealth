<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Custom="http://www.galasoft.ch/mvvmlight" x:Class="Stealth.MainWindow"
        mc:Ignorable="d ignore"
        Height="400"
        Width="572"
        Title="Stealth"
        >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <!-- Menu, Main container, StatusBar -->
    <DockPanel x:Name="LayoutRoot">
        <Menu x:Name="MainMenu" IsMainMenu="True" DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="Exit"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="About" Command="{Binding AboutCommand}"/>
            </MenuItem>
        </Menu>

        <StatusBar x:Name="MainStatus" DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding windowsInfoItemList.Count}"/>
            </StatusBarItem>
            <Separator Grid.Column="1"/>
            <StatusBarItem Grid.Column="2"/>
            <Separator Grid.Column="3"/>
            <StatusBarItem Grid.Column="4">
                <TextBlock Text="world"/>
            </StatusBarItem>
        </StatusBar>

        <DockPanel>
            <TextBox x:Name="textFilterInput" DockPanel.Dock="Top"
                     Margin="10" Padding="5,5,0,0" VerticalAlignment="Top">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <Custom:EventToCommand Command="{Binding TitleFilterCommand}" CommandParameter="{Binding ElementName=textFilterInput, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <DockPanel DockPanel.Dock="Top">
                <CheckBox x:Name="includeRemovedCheckBox" DockPanel.Dock="Left" Content="Show closed window">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <Custom:EventToCommand Command="{Binding IncludeRemovedCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=includeRemovedCheckBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </CheckBox>
                <CheckBox x:Name="includeEmptyTitleCheckBox" DockPanel.Dock="Left" Content="Show empty title window">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <Custom:EventToCommand Command="{Binding IncludeEmptyTitleCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=includeEmptyTitleCheckBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </CheckBox>
                <Button Content="Refresh" Command="{Binding RefreshCommand}"/>
            </DockPanel>
            <ListBox ItemsSource="{Binding windowsInfoItemList, Mode=TwoWay}"
                     HorizontalContentAlignment="Stretch"
                     ScrollViewer.CanContentScroll="false">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Border BorderBrush="Black" BorderThickness="1" DockPanel.Dock="Left">
                                <StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel x:Name="SummaryPanel">
                                            <Image DockPanel.Dock="Left" Source="{Binding ProcIcon}" MinWidth="32"/>
                                            <Label DockPanel.Dock="Top">
                                                <TextBlock Text="{Binding Title}" TextWrapping="Wrap"/>
                                            </Label>
                                            <Label Content="{Binding Opacity}" DockPanel.Dock="Left"/>
                                            <Grid/>
                                        </DockPanel>
                                        <StackPanel x:Name="DetailsPanel" Orientation="Vertical">
                                            <DockPanel x:Name="OpacityPanel">
                                                <Button Content="Detail" Width="70" DockPanel.Dock="Right"
                                                        Command="{Binding Main.DetailCommand, Source={StaticResource Locator}}"
                                                        CommandParameter="{Binding}"/>
                                                <Slider Value="{Binding Opacity}" Maximum="255" DockPanel.Dock="Left">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="ValueChanged">
                                                            <Custom:EventToCommand Command="{Binding Main.ChangeOpacityCommand, Source={StaticResource Locator}}"
                                                                                   CommandParameter="{Binding}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Slider>
                                            </DockPanel>
                                            <CheckBox Content="pin on top" IsChecked="{Binding IsTopMost}"
                                                      Command="{Binding Main.SetTopMostCommand, Source={StaticResource Locator}}"
                                                      CommandParameter="{Binding}"/>
                                            <!--<CheckBox Content="IsRemoved" Checked="{Binding isRemoved}" IsEnabled="False"/>-->
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVisibility}}" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </DockPanel>
    </DockPanel>
</Window>
